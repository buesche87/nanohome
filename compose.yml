services:
  nanohome:
    build: .
    hostname: nanohome
    container_name: nanohome
    restart: no
    depends_on:
      influxdb: 
        condition: service_healthy
      grafana:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "pgrep -x nanohome_shell && pgrep -x devwatcher_shelly_plus && pgrep -x devwatcher_shelly_legacy && pgrep -x measurements_shelly_legacy"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - nanohome
    volumes:
      - ./appdata/nanohome/data:/nanohome/data
    env_file: .env

  influxdb:
    image: influxdb:2
    hostname: influxdb
    container_name: influxdb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - nanohome
    ports:
      - 8086:8086
    volumes:
      - ./appdata/influxdb/data:/var/lib/influxdb2
      - ./appdata/influxdb/config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
      - DOCKER_INFLUXDB_INIT_CLI_CONFIG_NAME=${INFLUX_CONFIG}
  
  grafana:
    image: grafana/grafana:latest
    hostname: grafana
    container_name: grafana
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - nanohome
    ports:
      - 3000:3000
    volumes:
      - ./configs/grafana.ini:/etc/grafana/grafana.ini
      - ./appdata/nanohome/data/grafana:/usr/share/grafana/public/nanohome
      - ./appdata/grafana/data:/var/lib/grafana
      - ./appdata/grafana/log:/var/log/grafana
      - ./appdata/grafana/ssl:/certs
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel

  mosquitto:
    image: eclipse-mosquitto:latest
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1883"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - nanohome
    ports:
     - 1883:1883
     - 1884:1884
    volumes:
      - ./configs/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./appdata/mosquitto/data:/mosquitto/data
      - ./appdata/mosquitto/log:/mosquitto/log
    entrypoint: ["/bin/sh", "-c", "mosquitto_passwd -b /mosquitto/data/passwd ${MQTT_USER} ${MQTT_PASSWORD} && exec mosquitto -c /mosquitto/config/mosquitto.conf"]

networks:
  nanohome:
    driver: bridge