#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# nanohome - standbywatcher service
#
# Enable or disable a standbymanager for a device
# if there is a new retained message in "nanohome/standby/+"
#/////////////////////////////////////////////////////////////////////////////////////
DESCRIPTION=$1

# MQTT connection string with credentials
MQTT_CONNECTION_STRING=(
	-h "${MQTT_SERVER}"
	-u "${MQTT_USER}"
	-P "${MQTT_PASSWORD}"
)

# Define subscribe topic: "nanohome/standby/?"
if [[ -n "${DESCRIPTION}" ]]; then
	
	/bin/bash "${NANOHOME_ROOTPATH}/services/standbymanager" "${DESCRIPTION}" &
else
	SUBSCRIBETOPIC="${MQTT_TOPIC_STANDBY}/+"

	# Load standby configs
	PUBLISHED_CONFIGS=$(
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--retained-only --nodelay --quiet -W 2 \
		-t "${SUBSCRIBETOPIC}" 
	)

	# Exit script if no standby managers are configured
	if [[ -z "${PUBLISHED_CONFIGS}" ]]; then
		[[ $LOG_EXEC ]] && echo -e "${LOG_WARN} Nanohome: No message received from \"${SUBSCRIBETOPIC}\"" >> /proc/1/fd/1
		exit 0
	fi

	# Create an array containing all configs retreived
	PUBLISHED_CONFIGS_ARRAY=$(
		jq -s '.' <<< "${PUBLISHED_CONFIGS}"
	)

	# Create a standby manager for each config
	jq -c '.[]' <<< "${PUBLISHED_CONFIGS_ARRAY}" |
	while read -r CONFIG; do
		DESCRIPTION=$( jq -r '.description' <<< "${CONFIG}" )
		/bin/bash "${NANOHOME_ROOTPATH}/services/standbymanager" "${DESCRIPTION}" &
		sleep 2
	done
fi

