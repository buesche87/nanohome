#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# nanohome - standbywatcher service
#
# Enable or disable a standbymanager for a device
# if there is a new retained message in "nanohome/standby/+"
#/////////////////////////////////////////////////////////////////////////////////////
DESCRIPTION=$1

# MQTT connection string with credentials
MQTT_CONNECTION_STRING=(-h "$MQTT_SERVER" -u "$MQTT_USER" -P "$MQTT_PASSWORD")

if [[ -n "${DESCRIPTION}" ]]; then
	# Start a standby manager for a specific device
	/bin/bash "/nanohome/services/standbymanager" "${DESCRIPTION}" &
	echo -e "${LOG_SUCC} Standbymanager: Created for \"${DESCRIPTION}\"" >> /proc/1/fd/1
else
	# Start all configured standby manager
	SUBSCRIBETOPIC="nanohome/standby/+"

	# Load standby configs
	PUBLISHED_CONFIGS=$(
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--retained-only --nodelay --quiet -W 2 \
		-t "${SUBSCRIBETOPIC}" 
	)

	# Exit script if no standby managers are configured
	if [[ -z "${PUBLISHED_CONFIGS}" ]]; then
		echo -e "${LOG_INFO} Standbymanager: No standby configurations found" >> /proc/1/fd/1
		echo -e "${LOG_INFO}  > No message received from \"${SUBSCRIBETOPIC}\"" >> /proc/1/fd/1
		exit 0
	fi

	# Create an array containing all configs retreived
	PUBLISHED_CONFIGS_ARRAY=$(
		jq -s '.' <<< "${PUBLISHED_CONFIGS}"
	)

	# Create a standby manager for each config
	jq -c '.[]' <<< "${PUBLISHED_CONFIGS_ARRAY}" |
	while read -r CONFIG; do
		DESCRIPTION=$( jq -r '.description' <<< "${CONFIG}" )
		/bin/bash "/nanohome/services/standbymanager" "${DESCRIPTION}" &
		echo -e "${LOG_INFO} Standbymanager: Started for \"${DESCRIPTION}\"" >> /proc/1/fd/1
		sleep 1
	done
fi

