{
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": null,
    "links": [],
    "panels": [
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 1,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<head>\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../public/nanohome/css/timer.css\" />\r\n</head>\r\n<div id=\"timerData\" style=\"font-size: large;\">\r\n\tTimer\r\n\t<hr class=\"thight\"></hr>\r\n</div>\r\n<script>\r\n\tfunction loadScript(url) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tvar script = document.createElement(\"script\");\r\n\t\t\tscript.type = \"text/javascript\";\r\n\t\t\tscript.src = url;\r\n\r\n\t\t\tscript.onload = () => {\r\n\t\t\t\tconsole.log(\"successfully loaded: \" + url.replace('../public/nanohome/js/',''));\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\t\t\tscript.onerror = () => reject(new Error(`Failed to load script: ${url}`));\r\n\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t});\r\n\t}\r\n\r\n\tasync function loadScriptsInOrder(scripts) {\r\n\t\ttry {\r\n\t\t\tfor (const url of scripts) {\r\n\t\t\t\tawait loadScript(url);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"An error occurred:\", error);\r\n\t\t}\r\n\t}\r\n\r\n\tloadScriptsInOrder([\r\n\t\t\"../public/nanohome/js/common.js\",\r\n\t\t\"../public/nanohome/js/config.js\",\r\n\t\t\"../public/nanohome/js/timer.js\",\r\n\t\t\"../public/nanohome/js/mqtt.js\"\r\n\t]);\r\n</script>",
          "mode": "html"
        },
        "pluginVersion": "11.4.0",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 2
        },
        "id": 4,
        "panels": [
          {
            "fieldConfig": {
              "defaults": {},
              "overrides": []
            },
            "gridPos": {
              "h": 5,
              "w": 10,
              "x": 0,
              "y": 3
            },
            "id": 95,
            "options": {
              "code": {
                "language": "plaintext",
                "showLineNumbers": false,
                "showMiniMap": false
              },
              "content": "<select class=\"devmgr listBox\"\n        id=\"timerList_${Description}\"\n        size=\"6\"\n        onchange='timerSelected(\"${Description}\")' />\n<script>\n  setTimeout(() => {\n     if (checkMqttStatus()) {\n       getTimerInfo(); \n     }\n  }, 300);\n</script>",
              "mode": "html"
            },
            "pluginVersion": "11.4.0",
            "title": "",
            "transparent": true,
            "type": "text"
          },
          {
            "fieldConfig": {
              "defaults": {},
              "overrides": []
            },
            "gridPos": {
              "h": 5,
              "w": 9,
              "x": 10,
              "y": 3
            },
            "id": 190,
            "options": {
              "code": {
                "language": "plaintext",
                "showLineNumbers": false,
                "showMiniMap": false
              },
              "content": "<div class=\"statusDiv\">\r\n\t<div class=\"statusGroup\">\r\n\t\t<select class=\"detailValue\" id=\"timerPeriod_${Description}\">\r\n\t\t\t<option value=\"*\" selected>TÃ¤glich</option>\r\n\t\t\t<option value=\"1\">Montag</option>\r\n\t\t\t<option value=\"2\">Dienstag</option>\r\n\t\t\t<option value=\"3\">Mittwoch</option>\r\n\t\t\t<option value=\"4\">Donnerstag</option>\r\n\t\t\t<option value=\"5\">Freitag</option>\r\n\t\t\t<option value=\"6\">Samstag</option>\r\n\t\t\t<option value=\"0\">Sonntag</option>\r\n\t\t\t<option value=\"6-7\">Wochenende</option>\r\n\t\t\t<option value=\"1-5\">Werktags</option>\r\n\t\t</select>\r\n\t</div>\r\n\t<div class=\"statusGroup\">\r\n\t\t<label class=\"detailLabel\" for=\"timerOn_${Description}\">Ein / Auf:</label>\r\n\t\t<input \r\n\t\t\tclass=\"detailValue\"\r\n\t\t\tid=\"timerOn_${Description}\"\r\n\t\t\ttype=\"time\"\r\n\t\t\tstep=\"3600\"\r\n\t\t\tmin=\"00:00\"\r\n\t\t\tmax=\"23:59\"\r\n\t\t\tpattern=\"[0-9]{2}:[0-9]{2}\"\r\n\t\t\tonchange=\"timerInput('${Description}')\" />\r\n\t</div>\r\n<div class=\"statusGroup\">\r\n\t<label class=\"detailLabel\" for=\"timerOff_${Description}\">Aus / Zu:</label>\r\n\t<input \r\n\t\t\tclass=\"detailValue\"\r\n\t\t\tid=\"timerOff_${Description}\"\r\n\t\t\ttype=\"time\"\r\n\t\t\tstep=\"3600\"\r\n\t\t\tmin=\"00:00\"\r\n\t\t\tmax=\"23:59\"\r\n\t\t\tpattern=\"[0-9]{2}:[0-9]{2}\"\r\n\t\t\tonchange=\"timerInput('${Description}')\"/>\r\n</div>",
              "mode": "html"
            },
            "pluginVersion": "11.4.0",
            "title": "",
            "transparent": true,
            "type": "text"
          },
          {
            "fieldConfig": {
              "defaults": {},
              "overrides": []
            },
            "gridPos": {
              "h": 5,
              "w": 5,
              "x": 19,
              "y": 3
            },
            "id": 191,
            "options": {
              "code": {
                "language": "plaintext",
                "showLineNumbers": false,
                "showMiniMap": false
              },
              "content": "<div class=\"statusDiv\">\n  <div class=\"statusGroup\">\n    <div class=\"statusElement statusfalse\"\n          id=\"timerStatus_${Description}\">\n      Inactive\n    </div>\n  </div>\n  <div class=\"statusGroup\">\n    <button class=\"statusElement\"\n            id=\"timerSaveBtn_${Description}\"\n            onclick='saveTimer(\"${Description}\")'\n            disabled>\n      Save\n    </button>\n  </div>\n  <div class=\"statusGroup\">\n    <button class=\"statusElement\"\n            id=\"timerRemoveBtn_${Description}\"\n            onclick='removeTimer(\"${Description}\")'\n            disabled>\n      Remove\n    </button>\n  </div>\n</div>",
              "mode": "html"
            },
            "pluginVersion": "11.4.0",
            "title": "",
            "transparent": true,
            "type": "text"
          },
          {
            "fieldConfig": {
              "defaults": {},
              "overrides": []
            },
            "gridPos": {
              "h": 1,
              "w": 24,
              "x": 0,
              "y": 8
            },
            "id": 188,
            "options": {
              "code": {
                "language": "html",
                "showLineNumbers": false,
                "showMiniMap": false
              },
              "content": "<div style=\"margin-top: -10px;\"><hr></div>",
              "mode": "html"
            },
            "pluginVersion": "11.4.0",
            "title": "",
            "transparent": true,
            "type": "text"
          }
        ],
        "repeat": "Description",
        "title": "$Description",
        "type": "row"
      }
    ],
    "preload": true,
    "schemaVersion": 40,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "text": "All",
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "influxdb",
            "uid": "decmndsesy7swd"
          },
          "definition": "show tag values with key=Description where Component =~ /(?:switch|cover|relay)/",
          "includeAll": true,
          "label": "Device",
          "multi": true,
          "name": "Description",
          "options": [],
          "query": {
            "query": "show tag values with key=Description where Component =~ /(?:switch|cover|relay)/",
            "refId": "InfluxVariableQueryEditor-VariableQuery"
          },
          "refresh": 1,
          "regex": "",
          "sort": 1,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-1y",
      "to": "now"
    },
    "timepicker": {
      "hidden": true
    },
    "timezone": "browser",
    "title": "Timer",
    "uid": "ae489b6q64nwgf",
    "version": 1,
    "weekStart": ""
  }
}
