{
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": null,
    "links": [],
    "panels": [
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 1,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<head>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../public/nanohome/css/standby.css\" />\n</head>\n<div id=\"deviceData\" style=\"font-size: large;\">\n\tStandby\n\t<hr class=\"thight\"></hr>\n</div>\n<script>\n\tfunction loadScript(url) {\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tvar script = document.createElement(\"script\");\n\t\t\tscript.type = \"text/javascript\";\n\t\t\tscript.src = url;\n\n\t\t\tscript.onload = () => {\n\t\t\t\tconsole.log(\"Script loaded: \" + url.replace('../public/nanohome/js/',''));\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tscript.onerror = () => reject(new Error(`Failed to load script: ${url}`));\n\n\t\t\tdocument.head.appendChild(script);\n\t\t});\n\t}\n\n\tasync function loadScriptsInOrder(scripts) {\n\t\ttry {\n\t\t\tfor (const url of scripts) {\n\t\t\t\tawait loadScript(url);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"An error occurred:\", error);\n\t\t}\n\t}\n\n\tloadScriptsInOrder([\n\t\t\"../public/nanohome/js/config.js\",\n\t\t\"../public/nanohome/js/standby.js\",\n\t\t\"../public/nanohome/js/mqtt.js\"\n\t]);\n</script>",
          "mode": "html"
        },
        "pluginVersion": "11.5.2",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 2
        },
        "id": 4,
        "panels": [],
        "repeat": "Description",
        "title": "$Description",
        "type": "row"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 0,
          "y": 3
        },
        "id": 78,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<div class=\"detailsDiv\">\n  <div class=\"detailGroup\">\n    <label class=\"detailLabel\" for=\"standbyThreshold_${Description}\">Threshold</label>\n    <input class=\"detailEntry\" \n          id=\"standbyThreshold_${Description}\"\n          placeholder=\"[W]\"\n          autocomplete=\"off\"/>\n  </div>\n  <div class=\"detailGroup\">\n    <label class=\"detailLabel\" for=\"standbyDelay_${Description}\">Delay</label>\n    <input class=\"detailEntry\" \n          id=\"standbyDelay_${Description}\"\n          placeholder=\"[s]\"\n          autocomplete=\"off\" />\n  </div>\n</div>\n<script>\n  setTimeout(() => {\n     if (checkMqttStatus()) {\n       getStandby(\"${Description}\"); \n     }\n  }, 300);\n</script>",
          "mode": "html"
        },
        "pluginVersion": "11.5.2",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 12,
          "x": 12,
          "y": 3
        },
        "id": 70,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<div class=\"detailsDiv\">\r\n  <div class=\"detailGroup\">\r\n    <div class=\"detailEntry statusfalse\" \r\n         id=\"standbyStatus_${Description}\">\r\n     Inactive\r\n    </div>\r\n  </div>\r\n  <div class=\"detailGroup\">\r\n    <button class=\"detailEntry\" \r\n            id=\"standbySaveBtn_${Description}\">\r\n      Save\r\n    </button>\r\n  </div>\r\n  <div class=\"detailGroup\">\r\n    <button class=\"detailEntry\"\r\n            id=\"standbyRemoveBtn_${Description}\">\r\n      Remove\r\n    </button>\r\n  </div>\r\n</div>",
          "mode": "html"
        },
        "pluginVersion": "11.5.2",
        "title": "",
        "transparent": true,
        "type": "text"
      },
      {
        "fieldConfig": {
          "defaults": {},
          "overrides": []
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 5
        },
        "id": 77,
        "options": {
          "code": {
            "language": "html",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<div style=\"margin-top: -10px;\"><hr></div>",
          "mode": "html"
        },
        "pluginVersion": "11.5.2",
        "title": "",
        "transparent": true,
        "type": "text"
      }
    ],
    "preload": true,
    "schemaVersion": 40,
    "tags": [
      "nanohome"
    ],
    "templating": {
      "list": [
        {
          "current": {
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "influxdb",
            "uid": "aedgcbahjo3r4d"
          },
          "definition": "show tag values with key=Description where Component =~ /(?:switch|relay)/",
          "includeAll": true,
          "label": "Device",
          "multi": true,
          "name": "Description",
          "options": [],
          "query": "show tag values with key=Description where Component =~ /(?:switch|relay)/",
          "refresh": 1,
          "regex": "",
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-1y",
      "to": "now"
    },
    "timepicker": {
      "hidden": true
    },
    "timezone": "browser",
    "title": "Standby",
    "uid": "adjak60hekvswd",
    "version": 1,
    "weekStart": ""
  }
}
