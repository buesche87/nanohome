#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# Nanohome Shelly Legacy measurement watcher
#
# Subscribe to the status topic of all devices
# Check the connected status of each COMPONENT not filtered in config
# For each connected COMPONENT parse the status json and write values to influxdb
#/////////////////////////////////////////////////////////////////////////////////////

# TODO:
# - Automatically get newly connected devices

MQTT_CONNECTION_STRING=(
	-h "${MQTT_SERVER}"
	-u "${MQTT_USER}"
	-P "${MQTT_PASSWORD}"
)
# start measurement in background
start_measurement() {
	mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" -t "$3" -q 2 | \
	while read -r line; do
		influx write -b "${INFLUX_BUCKET_MEASUREMENTS}" -p s "$2 $1=$line"
	done &
}

# loop indefinitely
while /bin/true; do

	# subscribe to "shellies/+/+/+/connected"
	CONNECTED_DEVICES=$(
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--retained-only --nodelay --quiet -F "%j" -W 2 \
		-t "${MQTT_TOPIC_CONNECTED_LEGACY}"
	)

	# loop through all connected devices
	CONNECTED_DEVICES_ARRAY=$(
		jq -s '.' <<< "${CONNECTED_DEVICES}"
	)

	jq -c '.[]' <<< "${CONNECTED_DEVICES_ARRAY}" | while read -r CONNECTED_DEVICE; do

		CONNECTEDTOPIC=$( jq -r '.topic' <<< "${CONNECTED_DEVICE}" )
		DEVICEID=$( cut -d '/' -f 2 <<< "${CONNECTEDTOPIC}" )
		COMPONENT=$( cut -d '/' -f 3 <<< "${CONNECTEDTOPIC}")
		COMPONENTINDEX=$( cut -d '/' -f 4 <<< "${CONNECTEDTOPIC}" )	

		# do not monitor components excluded in config
		if [[ " ${NANOHOME_NOT_MONITORED_COMPONENTS_LEGACY//,/ } " == *" ${COMPONENT} "* ]]; then
			continue
		fi

		# get connected state and description of current component
		CONNECTED=$(
			mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
			--retained-only --nodelay --quiet -C 1 -W 1 \
			-t "shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/connected"
		)

		CONNECTEDVALUE=$(
			convert_value "${CONNECTED}"
		)

		DESCRIPTION=$(
			mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
			--retained-only --nodelay --quiet -C 1 -W 1 \
			-t "shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/description"
		)
		
		DESCRIPTION_ESCAPED="${DESCRIPTION// /\\ }"

		# only monitor connected components and those with a description
		if [[ $CONNECTEDVALUE -eq 0 ]] || [[ -z "${DESCRIPTION}" ]]; then
			continue
		fi

		# create measurement topics
		ENERGYTOPIC="shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/energy"
		POWERTOPIC="shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/power"
		DEVICETEMPTOPIC="shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/temperature"

		# check if component is already monitored
		MONITORED_ENERGY=$(
			ps | grep "${ENERGYTOPIC}" | grep -v "grep"
		)

		MONITORED_POWER=$(
			ps | grep "${POWERTOPIC}" | grep -v "grep"
		)

		MONITORED_DEVICETEMP=$(
			ps | grep "${DEVICETEMPTOPIC}" | grep -v "grep"
		)

		# subscribe and write into influxdb if not already monitored
		[[ -z "${MONITORED_ENERGY}" ]] && start_measurement "Energy" "${DESCRIPTION_ESCAPED}" "${ENERGYTOPIC}"
		[[ -z "${MONITORED_POWER}" ]] && start_measurement "Power" "${DESCRIPTION_ESCAPED}" "${POWERTOPIC}"
		[[ -z "${MONITORED_DEVICETEMP}" ]] && start_measurement "Devicetemp" "${DESCRIPTION_ESCAPED}" "${TEMPERATURETOPIC}"
	done
	
	sleep $NANOHOME_DEVWATCHER_INTERVAL
done
