#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# nanohome - devwatcher service
#
# Discover shelly gen 3 devices
# - Subscribe to all devices "online" topic
# - Get and filter components not monitored with nanohome
# - Write component infos into influx bucket "Devices"
# - Publish connected = false to the components "connected" topic
#/////////////////////////////////////////////////////////////////////////////////////

# Configuration
MQTT_CONNECTION_STRING=(
	-h "${MQTT_SERVER}"
	-u "${MQTT_USER}"
	-P "${MQTT_PASSWORD}"
)

# Convert string-boolean to 1 or 0
convert_value() {
	[[ "$1" == "true" ]] || [[ "$1" == "on" ]] && echo 1 || echo 0
}

# Execute every NANOHOME_DEVWATCHER_INTERVAL seconds
while /bin/true; do

	# Subscribe to "+/online"
	AVAILABLE_DEVICES=$(
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--retained-only --nodelay --quiet -W 2 -F "%j" \
		-t "${MQTT_TOPIC_ONLINE}"
	)
	
	# For each device found get device status
	AVAILABLE_DEVICES_ARRAY=$(
		jq -s '.' <<< "${AVAILABLE_DEVICES}"
	)

	jq -c '.[]' <<< "${AVAILABLE_DEVICES_ARRAY}" | while read -r AVAILABLE_DEVICE; do

		# Extract payload and device details from topic 
		ONLINETOPIC=$( jq -r '.topic' <<< "${AVAILABLE_DEVICE}" )
		ONLINEMESSAGE=$( jq -r '.payload' <<< "${AVAILABLE_DEVICE}" )
		ONLINEVALUE=$( convert_value "${ONLINEMESSAGE}" )
		DEVICEID=$( cut -d '/' -f 1 <<< "${ONLINETOPIC}" )

		# Create temporary file to store answer-message
		MESSAGE_TEMPFILE=$(mktemp)

		# Subscribe to status response topic for two seconds
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--nodelay --quiet -C 1 -W 2 -F "%j" \
		-t "${DEVICEID}/status" \
		> "${MESSAGE_TEMPFILE}" &

		SUBSCRIBE_PID=$!
		
		# Publish "status_update" to "shelly-deviceid/command"
		mosquitto_pub "${MQTT_CONNECTION_STRING[@]}" \
		-t "${DEVICEID}/command" \
		-m "status_update"

		# Wait for answer to be stored in temporary file
		wait "$SUBSCRIBE_PID"

		# Exctract message payload
		MESSAGE_STATUS=$(
			jq -r '.payload' "${MESSAGE_TEMPFILE}" 2>/dev/null
		)

		# Remove temp file and goto next iteration if file was empty
		rm "${MESSAGE_TEMPFILE}" && [[ -z "${MESSAGE_STATUS}" ]] && continue

		# Process devices components 
		jq -r 'to_entries[] | "\(.key), \(.value)"' <<< "${MESSAGE_STATUS}" | \
			while IFS=, read -r COMPONENT VALUE; do

			# Exclude components defined in NANOHOME_NOT_MONITORED_COMPONENTS
			if [[ " ${NANOHOME_NOT_MONITORED_COMPONENTS//,/ } " =~ " ${COMPONENT} " ]]; then
				continue
			fi

			# Get connected state and description of component
			CONNECTED=$(
				mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
				--retained-only --nodelay --quiet -C 1 -W 1 \
				-t "${DEVICEID}/status/${COMPONENT}/connected"
			)

			DESCRIPTION=$(
				mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
				--retained-only --nodelay --quiet -C 1 -W 1  \
				-t "${DEVICEID}/status/${COMPONENT}/description"
			)

			CONNECTEDVALUE=$(
				convert_value "${CONNECTED}"
			)

			DESCRIPTION_ESCAPED="${DESCRIPTION// /\\ }"

			# Publish connected = false for newly discovered devices
			if [[ $CONNECTEDVALUE -eq 0 ]]; then
				mosquitto_pub -r "${MQTT_CONNECTION_STRING[@]}" \
				-t "${DEVICEID}/status/${COMPONENT}/connected" \
				-m "false"
			fi

			# Get current output value (used in home dashboard)
			SWITCHPOWER=$(
				jq -r '.apower' <<< "${VALUE}"
			)

			CURRENTPOSITION=$(
				jq -r '.current_pos' <<< "${VALUE}"
			)

			[ "${SWITCHPOWER}" != "null" ] && OUTPUTVALUE="${SWITCHPOWER}"
			[ "${CURRENTPOSITION}" != "null" ] && OUTPUTVALUE="${CURRENTPOSITION}"

			# Publish current output value (used in home dashboard)
			mosquitto_pub -r "${MQTT_CONNECTION_STRING[@]}" \
			-t "${DEVICEID}/status/${COMPONENT}/output" \
			-m "${OUTPUTVALUE}"

			# Write device into influx bucket "Devices"
			[[ "${DESCRIPTION}" == "null" ]] && influx write \
			-b "${INFLUX_BUCKET_DEVICES}" \
			-p s "${DEVICEID},Component=${COMPONENT} Online=${ONLINEVALUE},Connected=${CONNECTEDVALUE},Output=${OUTPUTVALUE}"

			[[ "${DESCRIPTION}" != "null" ]] && influx write \
			-b "${INFLUX_BUCKET_DEVICES}" \
			-p s "${DEVICEID},Component=${COMPONENT},Description=${DESCRIPTION_ESCAPED} Online=${ONLINEVALUE},Connected=${CONNECTEDVALUE},Output=${OUTPUTVALUE}"

			# Log
			[[ $LOG_SERVICES ]] && echo -e "${LOG_SUCC} Devawtcher: Seen - ${DEVICEID} - ${COMPONENT}" >> /proc/1/fd/1
			[[ $LOG_DEBUG ]] && jq <<< "${MESSAGE_STATUS}" >> /proc/1/fd/1
		done
	done
	sleep $NANOHOME_DEVWATCHER_INTERVAL
done
