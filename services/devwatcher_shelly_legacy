#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# nanohome Shelly legacy device watcher service
#
# - MQTT Subscribe to devices online topic
# - Get all available devices, their online status and component configuration
# - Filter components not monitored
# - Write component infos into influxdb bucket "devices"
#/////////////////////////////////////////////////////////////////////////////////////



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#  -T,
# --filter-out
# Suppress printing of topics that match the filter. This allows subscribing to a wildcard topic and only printing a partial set of the wildcard hierarchy.
# 
# For example, subscribe to the BBC tree, but suppress output from Radio 3:
# 
# mosquitto_sub -t bbc/# -T bbc/radio3
# This option may be repeated to filter out multiple topics or topic trees.






# Convert string-boolean to 1 or 0
convert_value() {
	[[ "$1" == "true" ]] || [[ "$1" == "on" ]] && echo 1 || echo 0
}

# Main Service
mosquitto_sub -v -h "${MQTT_SERVER}" -u "${MQTT_USER}" -P "${MQTT_PASSWORD}" -t "${TOPIC_ONLINE_LEGACY}" -q 2 | while read -r DEVICESTATUS; do

	# Extract information from mosquitto subscription
    STATUSTOPIC=$(echo "${DEVICESTATUS}" | cut -d ' ' -f 1)
    STATUSMESSAGE=$(echo "${DEVICESTATUS}" | cut -d ' ' -f 2-)
	DEVICEID=$(echo "${STATUSTOPIC}" | cut -d '/' -f 2)
	COMPONENT=$(echo "${STATUSTOPIC}" | cut -d '/' -f 3)
	COMPONENTINDEX=$(echo "${STATUSTOPIC}" | cut -d '/' -f 4)
	COMPONENTMERGED="${COMPONENT}:${COMPONENTINDEX}"

	# Do not monitor components excluded in config
	match=false
	IFS=',' read -r -a COMPONENTSARRAY <<< "${NOT_MONITORED_COMPONENTS_LEGACY}"
	for item in "${COMPONENTSARRAY[@]}"; do
		[[ "${COMPONENT}" == "$item" ]] && match=true && break
	done

	if ! $match; then
		# Get connected status
		CONNECTEDTOPIC="shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/connected"
		CONNECTEDMESSAGE=$(mosquitto_sub -h "${MQTT_SERVER}" -u "${MQTT_USER}" -P "${MQTT_PASSWORD}" -t "${CONNECTEDTOPIC}" -C 1 -W 1 --retained-only --nodelay --quiet)
		CONNECTEDVALUE=$(convert_value "${CONNECTEDMESSAGE}")
		# publish connected=false for new devices 
		[[ $CONNECTEDVALUE -eq 0 ]] && mosquitto_pub -r -h "${MQTT_SERVER}" -u "${MQTT_USER}" -P "${MQTT_PASSWORD}" -t "${CONNECTEDTOPIC}" -m "false"

		# Get component description
		DESCRIPTIONTOPIC="shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/description"
		DESCRIPTIONMESSAGE=$(mosquitto_sub -h "${MQTT_SERVER}" -u "${MQTT_USER}" -P "${MQTT_PASSWORD}" -t "${DESCRIPTIONTOPIC}" -C 1 -W 1 --retained-only --nodelay --quiet)
		DESCRIPTION="${DESCRIPTIONMESSAGE// /\\ }"

		# Write device infos into devices bucket
		[ -z "${DESCRIPTION}" ] && PAYLOAD="${DEVICEID},Component=${COMPONENTMERGED} Connected=${CONNECTEDVALUE}"
		[ -n "${DESCRIPTION}" ] && PAYLOAD="${DEVICEID},Component=${COMPONENTMERGED},Description=${DESCRIPTION} Connected=${CONNECTEDVALUE}"
		influx write -b "${INFLUXDB_BUCKET_DEVICES}" -p s "${PAYLOAD}"
	fi
done
