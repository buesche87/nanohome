#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# nanohome - devwatcher service legacy
#
# Discover shelly gen 1 devices
# - Subscribe to all devices "input" topic
# - Get and filter components not monitored with nanohome
# - Write component infos into influx bucket "Devices"
#/////////////////////////////////////////////////////////////////////////////////////

# Function
convert_value() {
	[[ "$1" == "true" ]] || [[ "$1" == "on" ]] && echo 1 || echo 0
	}

# Configuration
MQTT_CONNECTION_STRING=(
	-h "${MQTT_SERVER}"
	-u "${MQTT_USER}"
	-P "${MQTT_PASSWORD}"
	)


#===============================================================
# Infinitely subscribe to "shellies/+/input/+" 
#===============================================================

mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" --nodelay --quiet -F "%j" \
	-t "${MQTT_TOPIC_ONLINE_LEGACY}" | while read -r DEVICESTATUS; do

	# Extract payload and device topic 
	OUTPUT=$( jq -r '.payload' <<< "${DEVICESTATUS}" )
	STATUSTOPIC=$( jq -r '.topic' <<< "${DEVICESTATUS}" )
	DEVICEID=$( cut -d '/' -f 2 <<< "${STATUSTOPIC}" )
	COMPONENT=$( cut -d '/' -f 3 <<< "${STATUSTOPIC}" )
	COMPONENTINDEX=$( cut -d '/' -f 4 <<< "${STATUSTOPIC}" )
	COMPONENTMERGED="${COMPONENT}:${COMPONENTINDEX}"
	ONLINEVALUE=1 # Assume getting a message equals device online

	#===============================================================
	# Filter components not monitored
	#===============================================================

	if [[ " ${NANOHOME_NOT_MONITORED_COMPONENTS_LEGACY//,/ } " == *" ${COMPONENT} "* ]]; then
		continue
	fi

	#===============================================================
	# Get connected state and description of component
	#===============================================================

	CONNECTED=$(
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--retained-only --nodelay --quiet -C 1 -W $MQTT_SUBSCRIBE_TIMEOUT_SERVICE \
		-t "shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/connected"
		)

	CONNECTEDVALUE=$( convert_value "${CONNECTED}" )

	DESCRIPTION=$(
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--retained-only --nodelay --quiet -C 1 -W $MQTT_SUBSCRIBE_TIMEOUT_SERVICE \
		-t "shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/description"
		)

	DESCRIPTION_ESCAPED="${DESCRIPTION// /\\ }"

	#===============================================================
	# Manage Dashbaord Panels
	#===============================================================

	OUTPUTVALUE=$( convert_value "${OUTPUT}" )

	mosquitto_pub -r "${MQTT_CONNECTION_STRING[@]}" \
		-t "shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/output" \
		-m "${OUTPUTVALUE}"

	#===============================================================
	# Write measurements into influx bucket "Devices"
	#===============================================================

	if [[ -z "${DESCRIPTION}" ]]; then
		INFLUX_PAYLOAD="${DEVICEID},Component=${COMPONENTMERGED} Online=${ONLINEVALUE},Connected=${CONNECTEDVALUE},Output=${OUTPUTVALUE}"
	else
		INFLUX_PAYLOAD="${DEVICEID},Component=${COMPONENTMERGED},Description=${DESCRIPTION_ESCAPED} Online=${ONLINEVALUE},Connected=${CONNECTEDVALUE},Output=${OUTPUTVALUE}"
	fi

	influx write -b "${INFLUX_BUCKET_DEVICES}" -p s "${INFLUX_PAYLOAD}"

	# Log
	[[ $LOG_SERVICES ]] && echo -e "${LOG_SUCC} Devwatcher Legacy: Message recived from [${DEVICEID}/${COMPONENTMERGED}]" >> /proc/1/fd/1
	[[ $LOG_DEBUG ]] && echo -e "${LOG_INFO} Devwatcher Legacy: Line protocol payload [${INFLUX_PAYLOAD}]" >> /proc/1/fd/1
done
