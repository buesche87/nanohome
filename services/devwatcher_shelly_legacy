#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# nanohome Shelly legacy device watcher service
#
# - MQTT Subscribe to devices online topic
# - Get all available devices, their online status and component configuration
# - Filter components not monitored
# - Write component infos into influxdb bucket "devices"
#/////////////////////////////////////////////////////////////////////////////////////



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#  -T,
# --filter-out
# Suppress printing of topics that match the filter. This allows subscribing to a wildcard topic and only printing a partial set of the wildcard hierarchy.
# 
# For example, subscribe to the BBC tree, but suppress output from Radio 3:
# 
# mosquitto_sub -t bbc/# -T bbc/radio3
# This option may be repeated to filter out multiple topics or topic trees.

MQTT_CONNECTION_STRING=(
	-h "${MQTT_SERVER}"
	-u "${MQTT_USER}"
	-P "${MQTT_PASSWORD}"
)

# Convert string-boolean to 1 or 0
convert_value() {
	[[ "$1" == "true" ]] || [[ "$1" == "on" ]] && echo 1 || echo 0
}

# Main Service
mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
	--nodelay --quiet -F "%j" \
	-t "${MQTT_TOPIC_ONLINE_LEGACY}" | \
	while read -r DEVICESTATUS; do

	# Extract information from mosquitto subscription
	STATUSTOPIC=$( jq -r '.topic' <<< "${DEVICESTATUS}" )
	STATUSMESSAGE=$( jq -r '.payload' <<< "${DEVICESTATUS}" )

	DEVICEID=$( cut -d '/' -f 2 <<< "${STATUSTOPIC}" )
	COMPONENT=$( cut -d '/' -f 3 <<< "${STATUSTOPIC}" )
	COMPONENTINDEX=$( cut -d '/' -f 4 <<< "${STATUSTOPIC}" )

	COMPONENTMERGED="${COMPONENT}:${COMPONENTINDEX}"
	ONLINEVALUE=1 # Assume getting a message equals device is online

	# Filter not monitored components
	if [[ " ${NANOHOME_NOT_MONITORED_COMPONENTS_LEGACY//,/ } " == *" ${COMPONENT} "* ]]; then
		continue
	fi

	# Debug
	echo "Devwatcher Legacy: ${DEVICEID}/${COMPONENTMERGED}"

	CONNECTED=$(
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--retained-only --nodelay --quiet -C 1 -W 1 \
		-t "shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/connected"
	)

	CONNECTEDVALUE=$( convert_value "${CONNECTED}" )

	if [[ $CONNECTEDVALUE -eq 0 ]]; then
		mosquitto_pub -r "${MQTT_CONNECTION_STRING[@]}" \
		-t "shellies/${DEVICEID}/${COMPONENT}/${COMPONENTINDEX}/connected" \
		-m "false"
	fi

	# Get description
	DESCRIPTION=$(
		mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" \
		--retained-only --nodelay --quiet -C 1 -W 1 \
		-t "${DEVICEID}/status/${COMPONENT}/description"
	)

	# Write payload into influxdb
	PAYLOAD='{
		"measurement": "'"${DEVICEID}"'",
		"tags": {
			"Component": "'"${COMPONENTMERGED}"'",
			"Description": "'"${DESCRIPTION}"'",
		},
		"fields": {
			"online": "'"${ONLINEVALUE}"'",
			"connected": "'"${CONNECTEDVALUE}"'"
		},
	}'

	# Debug
	echo "Devwatcher Legacy - Payload: ${DEVICEID}/${COMPONENT}"
	jq <<< "${PAYLOAD}"

	influx write -b "${INFLUXDB_BUCKET_DEVICES}" -f - <<< "${PAYLOAD}"

done
