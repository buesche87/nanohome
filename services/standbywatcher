#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# nanohome - standbywatcher service
#
# Enable or disable a standbymanager for a device
# if there is a new retained message in "nanohome/standby/+"
#/////////////////////////////////////////////////////////////////////////////////////

# MQTT connection string with credentials
MQTT_CONNECTION_STRING=(
	-h "${MQTT_SERVER}"
	-u "${MQTT_USER}"
	-P "${MQTT_PASSWORD}"
)

# MQTT retained message subscription options
MQTT_RETAINED_OPTIONS=(
	--retained-only
	--nodelay
	--quiet
	-C 1
	-W 1
)

# Temporary storage for active services
STATE_FILE="/tmp/standbywatcher.state"
touch "$STATE_FILE"

#===============================================================
# Functions
#===============================================================

# Start a background service
start_standbyservice() {
    local msg="$1"
    local id=$( echo -n "$msg" | md5sum | cut -d ' ' -f1 )
	local description=$( jq -r '.description' <<< "${msg}" )

    # Check if service is already running
    if grep -q "$id" "$STATE_FILE"; then
		[[ $LOG_DEBUG ]] && echo -e "${LOG_INFO} Standbywatcher: Standbymanager service for [$description] already running" >> /proc/1/fd/1
    else
        [[ $LOG_SERVICE ]] && echo -e "${LOG_SUCC} Standbywatcher: Starting new standbymanager service for [$description]" >> /proc/1/fd/1
        nohup /bin/bash ./standbymanager "$msg" > "/tmp/standbymanager_$id.log" 2>&1
    fi
}

# Stop a background service
stop_standbyservice() {
    local msg="$1"
    local id=$( echo -n "$msg" | md5sum | cut -d ' ' -f1 )
    local description=$( jq -r '.description' <<< "${msg}" )

    if grep -q "$id" "$STATE_FILE"; then
		[[ $LOG_SERVICE ]] && echo -e "${LOG_SUCC} Standbywatcher: Disabling standbymanager service for [$description]" >> /proc/1/fd/1

        local pid=$( grep "$id" "$STATE_FILE" | awk '{print $2}' )
        kill "$pid"
        sed -i "/$id/d" "$STATE_FILE"
    fi
}

#===============================================================
# Infinitely subscribe to "nanohome/standby/+"
#===============================================================

# Start a new standbywatcher background service if message gets added
mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" -t "${MQTT_TOPIC_STANDBY}/+" -R |
while read -r STANDBYMESSAGE; do
    if [[ -n "${STANDBYMESSAGE}" ]]; then
        start_standbyservice "${STANDBYMESSAGE}"
    fi
done &

# Stop a standbywatcher background service if message gets deleted
mosquitto_sub "${MQTT_CONNECTION_STRING[@]}" -t "${MQTT_TOPIC_STANDBY}/+" --retained-only |
while read -r STANDBYMESSAGE; do
    if [[ -z "${STANDBYMESSAGE}" ]]; then
        stop_standbyservice "${STANDBYMESSAGE}"
    fi
done &
