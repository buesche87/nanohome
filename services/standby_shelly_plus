#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# Nanohome Shelly Plus standby manager
#
# Subscribe to the status topic of all devices
# For each message, check if a standby json for the component was published
# Compare the standby value with the current output power and do some magic
#/////////////////////////////////////////////////////////////////////////////////////

# TODO: Umschreiben

# Main Service
mosquitto_sub -v -h ${MQTT_SERVER} -u ${MQTT_USER} -P ${MQTT_PASSWORD} -t ${TOPIC_STATUS} -q 2 | while read -r DEVICESTATUS; do

    # Extract information from mosquitto_sub
    STATUSTOPIC=$(echo ${DEVICESTATUS} | cut -d ' ' -f 1)
    STATUSMESSAGE=$(echo ${DEVICESTATUS} | cut -d ' ' -f 2-)
	DEVICEID=$(echo ${STATUSTOPIC} | cut -d '/' -f 1)
	COMPONENT=$(echo ${STATUSTOPIC} | cut -d '/' -f 3)

	# Get component description for measurement in influxdb
	DESCRIPTIONTOPIC="$DEVICEID/status/$COMPONENT/description"
	DESCRIPTIONMESSAGE=$(mosquitto_sub -h ${MQTT_SERVER} -u ${MQTT_USER} -P ${MQTT_PASSWORD} -t ${DESCRIPTIONTOPIC} -C 1 -W 1 --retained-only --nodelay --quiet)
	DESCRIPTION="${DESCRIPTIONMESSAGE// /\\ }"
	
	# Get standby json and parse values. set wait time to 1 second if nothing defined
	[ -z "$DESCRIPTION" ] && continue
	
	# Standby management
	STANDBYTOPIC="nanohome/$DESCRIPTION/standby"
	STANDBYJSON=$(mosquitto_sub -h "$mqtt_server" -u "$mqtt_system_user" -P "$mqtt_system_pass" -t "$STANDBYTOPIC" -C 1 -W 1 --retained-only --nodelay --quiet)
	STANDBYDESCRIPTION=$(echo ${STANDBYJSON} | jq -r .description )
	STANDBYVALUE=$(echo ${STANDBYJSON} | jq -r .standby )
	STANDBYWAIT=$(echo ${STANDBYJSON} | jq -r .wait )
	[[ "$STANDBYWAIT" == "null" ]] && STANDBYWAIT=1
	
	# Manage standby if value found
	if jq -e . >/dev/null 2>&1 <<<"$STATUSMESSAGE" && [ -n "$STANDBYVALUE" ] && [[ "$DESCRIPTION" == "$STANDBYDESCRIPTION" ]]; then

		# Parse message payload
		CURRENTPOWER=$(echo ${STATUSMESSAGE} | jq -r .apower )

		# Define component control topic
		COMPONENTCONTROL="$DEVICEID/command/$COMPONENT"

		# Check last manager status
		managerTopic="nanohome/$DESCRIPTION/standby/manager"
		managerValue=$(mosquitto_sub -h "$mqtt_server" -u "$mqtt_system_user" -P "$mqtt_system_pass" -t "$managerTopic" -C 1 -W 1 --retained-only --nodelay --quiet)

		# Do some magic and don't kill the device if it just started
		if awk 'BEGIN { exit !('$CURRENTPOWER' == 0) }'; then
			echo "$DESCRIPTION: off"
			mosquitto_pub -r -h "$mqtt_server" -u "$mqtt_system_user" -P "$mqtt_system_pass" -t "$managerTopic" -m "off" >/dev/null 2>&1
		elif awk 'BEGIN { exit !('$CURRENTPOWER' < '$STANDBYVALUE') }'; then
			if [ "$managerValue" == "off" ]; then
				echo "$DESCRIPTION: Just started"
				sleep $STANDBYWAIT
				mosquitto_pub -r -h "$mqtt_server" -u "$mqtt_system_user" -P "$mqtt_system_pass" -t "$managerTopic" -m "on" >/dev/null 2>&1
			elif [ "$managerValue" == "on" ]; then
				echo "$DESCRIPTION: Running in standby"
				mosquitto_pub -h "$mqtt_server" -u "$mqtt_system_user" -P "$mqtt_system_pass" -t "$COMPONENTCONTROL" -m "off" >/dev/null 2>&1
				mosquitto_pub -r -h "$mqtt_server" -u "$mqtt_system_user" -P "$mqtt_system_pass" -t "$managerTopic" -m "off" >/dev/null 2>&1		
			fi
		elif awk 'BEGIN { exit !('$CURRENTPOWER' > '$STANDBYVALUE') }'; then
			if [ "$managerValue" == "off" ]; then
				echo "$DESCRIPTION: Just started"
				mosquitto_pub -r -h "$mqtt_server" -u "$mqtt_system_user" -P "$mqtt_system_pass" -t "$managerTopic" -m "on" >/dev/null 2>&1
				sleep $STANDBYWAIT
			else
				echo "$DESCRIPTION: Running"
				mosquitto_pub -r -h "$mqtt_server" -u "$mqtt_system_user" -P "$mqtt_system_pass" -t "$managerTopic" -m "on" >/dev/null 2>&1
			fi
		fi
	fi
done
